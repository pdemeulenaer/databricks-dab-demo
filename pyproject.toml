[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120
disable = 'C0114, C0115, C0116'
[project]
name = "databricks-dab-demo"
version = "0.1.0"
description = ""
authors = [
    {name = "pdemeulenaer",email = "pdemeulenaer@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "python-dotenv (==1.0.1)",
    "black (==24.4.2)",
    "pylint (==3.1.0)",
    "mypy (==1.10.0)",
    "behave (==1.2.6)",
    "pre-commit (==3.7.0)",
    "mkdocs (==1.6.0)",
    "mkdocstrings[python] (==0.25.0)",
    "mkdocs-print-site-plugin (==2.4.0)",
    "mkdocs-with-pdf (==0.9.3)",
    "mkdocs-same-dir (==0.1.3)",
    "scikit-learn (==1.5.1)",
    "matplotlib (==3.9.2)",
    "mlflow (==2.16.2)",
    "datasets (==3.2.0)",
    "databricks-connect (==13.3.2)",
    "numpy (>=2.2.2,<3.0.0)",
    "pandas (>=2.2.3,<3.0.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[tool.poetry.scripts]
data_extraction="databricks_dab_demo.data_pipeline.task1:main"
data_visualization="databricks_dab_demo.data_pipeline.task2:main"
training="databricks_dab_demo.model.train:main"
evaluation="databricks_dab_demo.model.evaluate:main"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
black = "^25.1.0"
ruff = "^0.9.6"
mypy = "^1.15.0"
pre-commit = "^4.1.0"
bandit = { version = "^1.7.6", extras = ["toml"] }
pytest-mock = "^3.14.0"
pytest-cov = "^6.0.0"
isort = "^6.0.0"
nbstripout = "^0.8.1"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]
python_files = "test_*.py *_test.py Test*.py *Test.py"
python_classes = "*Test Test"
markers = ["spark"]

[tool.mypy]
plugins = "pydantic.mypy"
disallow_untyped_calls = "true"
disallow_untyped_defs = "true"
disallow_incomplete_defs = "true"
check_untyped_defs = "true"
no_implicit_optional = "true"
warn_redundant_casts = "true"
ignore_missing_imports = "true"

[tool.ruff]
exclude = [
    "*/notebooks/*",
]
